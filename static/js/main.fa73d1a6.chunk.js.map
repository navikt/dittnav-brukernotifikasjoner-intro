{"version":3,"sources":["assets/Brukeropplevelse.png","assets/Avhengigheter.png","assets/Dittnav.png","assets/Innsyn.png","assets/Skisse.png","assets/Diagram.png","components/styled/Layout.js","components/styled/Innhold.js","components/styled/Ingress.js","components/Introduksjon.js","components/styled/TekstBoks.js","components/Problemer.js","components/Oversikt.js","assets/Beskjed.js","assets/Oppgave.js","assets/Statusoppdatering.js","components/Funksjonalitet.js","components/Tidslinje.js","components/Teknisk.js","assets/Utgang.js","components/Starte.js","components/Status.js","App.js","serviceWorker.js","index.js","assets/Prosess.png"],"names":["module","exports","FlatLayout","styled","div","Style","props","light","Layout","children","margin","flat","mobileMargin","trimBottom","Innhold","left","Ingress","Introduksjon","style","textAlign","paddingRight","bottom","TekstBox","Ikon","img","Tekst","Normaltekst","Problemer","src","brukeropplevelse","alt","avhengigheter","Bilde","BildeContainer","Forklaring","Hjelpetekst","top","Oversikt","dittnav","type","innsyn","Beskjed","width","height","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","transform","cx","cy","r","d","id","Oppgave","Statusoppdatering","Box","Funksjonalitet","Skisse","Tidslinje","tidslinje","Diagram","Prosess","column","CenteredTextBox","Teknisk","diagram","prosess","Svg","svg","skjul","Utgang","Liste","ul","ListItem","li","Starte","isMobile","useMediaQuery","query","href","Table","table","TableRow","tr","TableHead","th","TableData","td","Status","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa73d1a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Brukeropplevelse.71ecf80b.png\";","module.exports = __webpack_public_path__ + \"static/media/Avhengigheter.e5798ea0.png\";","module.exports = __webpack_public_path__ + \"static/media/Dittnav.99f54b32.png\";","module.exports = __webpack_public_path__ + \"static/media/Innsyn.816ab4a9.png\";","module.exports = __webpack_public_path__ + \"static/media/Skisse.64b7bcf7.png\";","module.exports = __webpack_public_path__ + \"static/media/Diagram.dacedb3f.png\";","import React from 'react';\nimport styled from \"styled-components\";\n\nexport const FlatLayout = styled.div`\n  background-color: #E9E7E7;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Style = styled.div`\n    background-color: ${props => props.light ? '#E9E7E7' : '#C6C2BF'};\n    position: relative;\n    color: black;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Layout = ({light, children}) => (\n  <Style light={light}>\n    {children}\n  </Style>\n);\n\nexport default Layout;\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst margin = (flat) => flat ? '0rem' : '8rem';\nconst mobileMargin = (flat) => flat ? '0rem' : '4rem';\n\nconst Style = styled.div`\n    margin-top: ${margin()};\n    margin-bottom: ${props => props.trimBottom ? '2.5rem' : margin()};\n    margin-left: ${props => margin(props.flat)};\n    margin-right: ${props => margin(props.flat)};\n    @media (max-width: 768px) {\n      margin-top: ${mobileMargin()};\n      margin-bottom: ${props => props.trimBottom ? '0' : mobileMargin()};\n      margin-left: ${props => mobileMargin(props.flat)};\n      margin-right: ${props => mobileMargin(props.flat)};\n   }\n   ${props => props.flat && 'display: flex;'}\n   ${props => props.flat && 'align-items: center;'}\n   ${props => props.flat && 'justify-content: center;'}\n   ${props => props.flat && 'flex-direction: column;'}\n`;\n\nconst Innhold = ({flat, trimBottom, children}) => (\n  <Style flat={flat} trimBottom={trimBottom}>\n    {children}\n  </Style>\n);\n\nexport default Innhold;\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst Style = styled.div`\n    max-width: 800px;\n    ${props => props.left && 'text-align: left;'}\n`;\n\nconst Ingress = ({left, children}) => (\n  <Style left={left}>\n    {children}\n  </Style>\n);\n\nexport default Ingress;\n","import React from 'react';\nimport {Normaltekst, Sidetittel} from \"nav-frontend-typografi\";\nimport Layout from \"./styled/Layout\";\nimport Innhold from \"./styled/Innhold\";\nimport Ingress from \"./styled/Ingress\";\n\nconst Introduksjon = () => {\n  return (\n    <Layout>\n      <Innhold>\n        <Sidetittel>\n          Ditt NAV: <br/>Helhet i innloggede tjenester på nav.no\n        </Sidetittel>\n        <br/>\n        <Ingress>\n          <Normaltekst>\n            «Ditt NAV skal binde sammen alle de gode tjenestene som andre team lager for brukerne våre.\n            Brukerne har ikke noe forhold til hvordan NAV er organisert eller hvordan tjenestene er inndelt\n            - de vil bare ha hjelp og støtte i sin unike situasjon. På Ditt NAV skal brukerne få et\n            overblikk over sitt forhold til NAV, og bli trygge på at NAV kan hjelpe dem videre i livet».\n          </Normaltekst>\n          <Normaltekst style={{textAlign: 'right', paddingRight: '80px'}}>\n            <i>- Team Personbruker</i>\n          </Normaltekst>\n        </Ingress>\n      </Innhold>\n    </Layout>\n  )\n};\n\nexport default Introduksjon;\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst Style = styled.div`\n  display: flex;\n  ${props => props.bottom && 'padding-bottom: 2.5em'};\n`;\n\nconst TekstBox = ({bottom, children}) => (\n  <Style bottom={bottom}>\n    {children}\n  </Style>\n);\n\nexport default TekstBox;\n","import React from 'react';\nimport {Normaltekst, Systemtittel} from \"nav-frontend-typografi\";\nimport Layout from \"./styled/Layout\";\nimport Ingress from \"./styled/Ingress\";\nimport Innhold from \"./styled/Innhold\";\nimport styled from \"styled-components\";\nimport brukeropplevelse from \"../assets/Brukeropplevelse.png\";\nimport avhengigheter from \"../assets/Avhengigheter.png\";\nimport TekstBox from \"./styled/TekstBoks\";\n\nconst Ikon = styled.img`\n  height: 120px;\n  padding-right: 1.5em;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Tekst = styled(Normaltekst)`\n  margin: auto;\n`;\n\nconst Problemer = () => {\n  return (\n    <Layout light>\n      <Innhold>\n        <Systemtittel>\n          Hvilke problemer skal vi løse?\n        </Systemtittel>\n        <br/>\n        <Ingress left>\n          <TekstBox bottom>\n            <Ikon src={brukeropplevelse} alt=\"\"/>\n            <Tekst>\n              Brukerne sliter med å finne frem i de innloggede løsningene på nav.no. Informasjonen er\n              spredt og brukerne leter etter alt på alle steder. De føler utrygghet - «det sorte hullet»\n              blir brukt som betegnelse på opplevelsen brukerne har av å sende inn en søknad. Har Nav\n              mottat søknaden min? Har jeg gjort alt riktig? Mangler det noe? Når skal nav begynne å se\n              på saken min? Hvor lenge skal den være \"under behandling\" og hva er det neste som skal skje?\n              <b><i> Kommer alt til å ordne seg?</i></b>\n            </Tekst>\n          </TekstBox>\n          <TekstBox>\n            <Ikon src={avhengigheter} alt=\"\"/>\n            <Tekst>\n              Dittnav blir en flaskehals slik det har vært satt opp, med ekstremt mange koblinger og\n              avhengigheter ut til andre systemer og løsninger. Hver gang noe nytt skal «kobles på» Ditt\n              NAV kreves det utvikling fra Team Personbruker, og det kan ta tid før verdifull informasjon\n              til brukerne som blir generert av andre team når frem til Ditt NAV.\n            </Tekst>\n          </TekstBox>\n        </Ingress>\n      </Innhold>\n    </Layout>\n  )\n};\n\nexport default Problemer;\n","import React from 'react';\nimport {Systemtittel} from \"nav-frontend-typografi\";\nimport Hjelpetekst from 'nav-frontend-hjelpetekst';\nimport Layout from \"./styled/Layout\";\nimport Innhold from \"./styled/Innhold\";\nimport dittnav from \"../assets/Dittnav.png\";\nimport innsyn from \"../assets/Innsyn.png\";\n\nimport styled from \"styled-components\";\n\nconst Bilde = styled.img`\n  margin-top: 2rem;\n  width: 100%;\n`;\n\nconst BildeContainer = styled.div`\n  position: relative;\n`;\n\nconst Forklaring = styled(Hjelpetekst)`  \n  position: absolute;\n  ${props => props.top && `top: ${props.top};`}\n  ${props => props.left && `left: ${props.left};`}\n  \n  @media (max-width: 525px) {\n    display: none;\n  }\n`;\n\nconst Oversikt = () => {\n  return (\n    <Layout>\n      <Innhold trimBottom>\n        <Systemtittel>\n          Brukernotifikasjoner og statusopdateringer:<br/>\n          Oppgaver, beskjeder og status i søknad/sak til brukerne gjennom Ditt Nav\n        </Systemtittel>\n        <br/>\n        <BildeContainer>\n          <Bilde src={dittnav} alt=\"Skjermbilde av dittnav\"/>\n          <Forklaring top=\"35%\" left=\"94%\" type=\"over-hoyre\">\n            Beskjeder til brukerne som betrygger dem om at NAV er på saken.\n          </Forklaring>\n          <Forklaring top=\"45%\" left=\"3%\" type=\"over-venstre\">\n            Oppgaver som brukerne må gjøre for at NAV kan hjelpe dem videre.\n          </Forklaring>\n          <Forklaring top=\"82.5%\" left=\"3%\" type=\"over-venstre\">\n            Oversikt over søknader og saker, med siste statusoppdatering synlig.\n          </Forklaring>\n          <Forklaring top=\"62.5%\" left=\"65%\">\n            Alt samlet i en historikkvisning så brukerne enkelt kan finne tilbake - uavhengig av hvilken sak det gjaldt.\n          </Forklaring>\n        </BildeContainer>\n        <BildeContainer>\n          <Bilde src={innsyn} alt=\"Skjermbilde av en side til innsyn i sak\"/>\n          <Forklaring top=\"15%\" left=\"74%\">\n            Tenkt eksempel på en generisk innsyn i sak-side, med saksspesifikke oppgaver/beskjeder og en tidslinjekomponent som viser hva som har skjedd og hva som skal skje i saken.\n          </Forklaring>\n          <Forklaring top=\"75%\" left=\"93%\" type=\"over-hoyre\">\n            Tidslinjekomponenten viser hva som har skjedd og hva som skal skje i saken, basert på statusoppdateringer og brukernotifikasjoner. Innholdet i komponenten vil være generisk (basert på globale statuser) og tilpasses av teamene slik at den for eksempel også viser lokale statuser og bedre tilpasset tekstlig informasjon.\n          </Forklaring>\n        </BildeContainer>\n      </Innhold>\n    </Layout>\n  )\n};\n\nexport default Oversikt;\n","import React from 'react';\n\nconst Beskjed = () => (\n  <svg width=\"88px\" height=\"88px\" viewBox=\"0 0 48 48\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n    <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g transform=\"translate(-382.000000, -303.000000)\">\n        <g transform=\"translate(382.000000, 303.000000)\">\n          <circle fill=\"#C2EAF7\" cx=\"24\" cy=\"24\" r=\"24\" />\n          <path d=\"M23.5,12 C29.8410001,12 35,17.159 35,23.5 C35,29.8410001 29.8410001,35 23.5,35 C17.159,35 12,29.8410001 12,23.5 C12,17.159 17.159,12 23.5,12 Z M23.5,13 C17.71,13 13,17.71 13,23.5 C13,29.2900001 17.71,34 23.5,34 C29.2900001,34 34,29.2900001 34,23.5 C34,17.71 29.2900001,13 23.5,13 Z M21.5,21 L23.5,21 C23.7453334,21 23.9495803,21.1769877 23.9919397,21.4101619 L24,21.5 L24,30 L26.5,30 C26.7760001,30 27,30.2240001 27,30.5 C27,30.7453334 26.8230124,30.9495803 26.5898382,30.9919397 L26.5,31 L20.5,31 C20.224,31 20,30.7760001 20,30.5 C20,30.2546667 20.1769877,30.0504198 20.4101619,30.0080604 L20.5,30 L23,30 L23,22 L21.5,22 C21.224,22 21,21.776 21,21.5 C21,21.2546667 21.1769877,21.0504198 21.4101619,21.0080604 L21.5,21 L23.5,21 Z M23,16.5 C23.5522848,16.5 24,16.9477153 24,17.5 C24,18.0522848 23.5522848,18.5 23,18.5 C22.4477153,18.5 22,18.0522848 22,17.5 C22,16.9477153 22.4477153,16.5 23,16.5 Z\" id=\"Combined-Shape\" fill=\"#3E3832\" />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Beskjed;\n","import React from 'react';\n\nconst Oppgave = () => (\n  <svg width=\"88px\" height=\"88px\" viewBox=\"0 0 48 48\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n    <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g transform=\"translate(-382.000000, -429.000000)\">\n        <g transform=\"translate(382.000000, 429.000000)\">\n          <circle fill=\"#FFBD66\" cx=\"24\" cy=\"24\" r=\"24\" />\n          <path d=\"M35.5,12 C35.7760001,12 36,12.224 36,12.5 L36,35.5 C36,35.7760001 35.7760001,36 35.5,36 L12.5,36 C12.224,36 12,35.7760001 12,35.5 L12,12.5 C12,12.224 12.224,12 12.5,12 L35.5,12 Z M35,13 L13,13 L13,35 L35,35 L35,13 Z M22.853,25.1470001 C23.048,25.3420001 23.048,25.6590001 22.853,25.8540001 L17.853,30.8540001 C17.756,30.9510001 17.628,31.0000001 17.5,31.0000001 C17.372,31.0000001 17.244,30.9510001 17.146,30.8540001 L15.146,28.8540001 C14.951,28.6590001 14.951,28.3420001 15.146,28.1470001 C15.341,27.9520001 15.658,27.9520001 15.853,28.1470001 L17.5,29.7930001 L22.146,25.1470001 C22.341,24.9520001 22.658,24.9520001 22.853,25.1470001 Z M32.5,29.0000001 C32.7760001,29.0000001 33,29.2240001 33,29.5000001 C33,29.7760001 32.7760001,30.0000001 32.5,30.0000001 L24.5,30.0000001 C24.2240001,30.0000001 24,29.7760001 24,29.5000001 C24,29.2240001 24.2240001,29.0000001 24.5,29.0000001 L32.5,29.0000001 Z M22.853,16.147 C23.048,16.342 23.048,16.659 22.853,16.854 L17.853,21.854 C17.756,21.951 17.628,22 17.5,22 C17.372,22 17.244,21.951 17.146,21.854 L15.146,19.854 C14.951,19.659 14.951,19.342 15.146,19.147 C15.341,18.952 15.658,18.952 15.853,19.147 L17.5,20.793 L22.146,16.147 C22.341,15.952 22.658,15.952 22.853,16.147 Z M32.5,20 C32.7760001,20 33,20.224 33,20.5 C33,20.776 32.7760001,21 32.5,21 L24.5,21 C24.2240001,21 24,20.776 24,20.5 C24,20.224 24.2240001,20 24.5,20 L32.5,20 Z\" id=\"Combined-Shape\" fill=\"#3E3832\" />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Oppgave;\n","import React from 'react';\n\nconst Statusoppdatering = () => (\n  <svg width=\"88px\" height=\"88px\" viewBox=\"0 0 24 24\" version=\"1.1\">\n    <g id=\"Ditt-NAV-flyt\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <path d=\"M12,0 C5.383,0 0,5.384 0,12 C0,18.616 5.383,24 12,24 C18.616,24 24,18.616 24,12 C24,5.384 18.616,0 12,0 Z\" id=\"Shape\" fill=\"#1C6937\" fillRule=\"nonzero\"/>\n      <path d=\"M9.63993168,14.4414307 L16.0998211,8.60231554 C16.4920344,8.24700834 17.1087604,8.26567481 17.4763929,8.64623502 C17.8442028,9.02697893 17.8231421,9.62435747 17.430152,9.98049024 L10.2805711,16.4435337 C10.0985537,16.6069711 9.8612111,16.6956522 9.61751913,16.6956522 C9.36153632,16.6956522 9.11545171,16.5990262 8.92853154,16.419824 L6.54589388,14.1121315 C6.16586146,13.7440529 6.16586146,13.1465019 6.54589388,12.7784232 C6.92592631,12.4103446 7.54288359,12.4103446 7.92291602,12.7784232 L9.63993168,14.4414307 Z\" id=\"Path-Copy\" fill=\"#FFFFFF\" fillRule=\"nonzero\"/>\n    </g>\n  </svg>\n);\n\nexport default Statusoppdatering;\n","import React from 'react';\nimport {Innholdstittel, Normaltekst} from \"nav-frontend-typografi\";\nimport Innhold from \"./styled/Innhold\";\nimport {FlatLayout} from \"./styled/Layout\";\nimport styled from \"styled-components\";\nimport Beskjed from \"../assets/Beskjed\";\nimport Oppgave from \"../assets/Oppgave\";\nimport Statusoppdatering from \"../assets/Statusoppdatering\";\n\nconst Box = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  width: 1024px;\n  @media (max-width: 1024px) {\n    width 800px;\n  }\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 400px;\n  }\n  @media (max-width: 375px) {\n    width: 300px;\n  }\n`;\n\nconst Funksjonalitet = () => {\n  return (\n    <FlatLayout>\n      <Innhold flat>\n        <Innholdstittel>\n          Sånn funker det:\n        </Innholdstittel>\n        <br/>\n        <Box>\n          <div>\n            <Beskjed/>\n            <Normaltekst>\n              <b>Oppgaver...</b> <br/>\n              Forklaring/hensikt <br/>\n              Kafka: brukernotifikasjon + done <br/><br/>\n              Status: klar til bruk\n            </Normaltekst>\n          </div>\n          <div>\n            <Oppgave/>\n            <Normaltekst>\n              <b>Beskjeder...</b> <br/>\n              Forklaring/hensikt <br/>\n              Kafka: brukernotifikasjon + done <br/><br/>\n              Status: klar til bruk\n            </Normaltekst>\n          </div>\n          <div>\n            <Statusoppdatering/>\n            <Normaltekst>\n              <b>Statusoppdateringer...</b> <br/>\n              Forklaring/hensikt <br/>\n              Kafka: brukernotifikasjon + done <br/><br/>\n              Status: under utvikling\n            </Normaltekst>\n          </div>\n        </Box>\n      </Innhold>\n    </FlatLayout>\n  )\n};\n\nexport default Funksjonalitet;\n","import React from 'react';\nimport {Normaltekst, Systemtittel} from \"nav-frontend-typografi\";\nimport Layout from \"./styled/Layout\";\nimport Innhold from \"./styled/Innhold\";\nimport Ingress from \"./styled/Ingress\";\nimport tidslinje from '../assets/Skisse.png'\nimport styled from \"styled-components\";\n\nconst Skisse = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 3px;\n  margin-top: 2rem;\n`;\n\nconst Tidslinje = () => {\n  return (\n    <Layout>\n      <Innhold>\n        <Systemtittel>\n          Tidslinje: <br/>\n          Komponent for å vise tidligere og kommende hendelser i en sak\n        </Systemtittel>\n        <br/>\n        <Ingress>\n          <Normaltekst>\n            Vi lager en react-komponent som basert på hendelsene (oppgaver, beskjeder og statusoppdateringer)\n            viser bruker hva som har skjedd i saken og hva som er neste steg. Stegene vil være generiske,\n            men tidslinjen kan tilpasses av hvert team som lager innsyn i sak for tjenestene våre.\n          </Normaltekst>\n          <Skisse src={tidslinje} alt=\"\"/>\n        </Ingress>\n      </Innhold>\n    </Layout>\n  )\n};\n\nexport default Tidslinje;\n","import React from 'react';\nimport styled from \"styled-components\";\nimport {Normaltekst, Systemtittel} from \"nav-frontend-typografi\";\nimport Layout from \"./styled/Layout\";\nimport Innhold from \"./styled/Innhold\";\nimport diagram from \"../assets/Diagram.png\"\nimport prosess from \"../assets/Prosess.png\"\nimport Ingress from \"./styled/Ingress\";\n\nconst Diagram = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 3px;\n  margin-top: 2rem;\n`;\n\nconst Prosess = styled.img`\n  width: 35%;\n  height: auto;\n  border-radius: 3px;\n  margin-top: 2rem;\n`;\n\nconst Box = styled.div`\n  display: flex;\n  ${props => props.column && 'flex-direction: column'};\n`;\n\nconst CenteredTextBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-left: 20px;\n  text-align: left;\n`;\n\nconst Teknisk = () => {\n  return (\n    <Layout light>\n      <Innhold>\n        <Systemtittel>\n          Teknisk dokumentasjon\n        </Systemtittel>\n        <br/>\n        <Ingress>\n          <Diagram src={diagram} alt=\"Diagram av løsningen\"/>\n          <Box column>\n            <Box>\n              <Prosess src={prosess} alt=\"\"/>\n              <CenteredTextBox>\n                <Normaltekst>\n                  <b>Oppgaver</b><br/>\n                  Forklaring/hensikt ...<br/>\n                  Kafka: brukernotifikasjon + done\n                </Normaltekst>\n              </CenteredTextBox>\n            </Box>\n            <Box>\n              <Prosess src={prosess} alt=\"\"/>\n              <CenteredTextBox>\n                <Normaltekst>\n                  <b>Beskjeder</b><br/>\n                  Forklaring/hensikt ...<br/>\n                  Kafka: brukernotifikasjon + done\n                </Normaltekst>\n              </CenteredTextBox>\n            </Box>\n            <Box>\n              <Prosess src={prosess} alt=\"\"/>\n              <CenteredTextBox>\n                <Normaltekst>\n                  <b>Statusoppdateringer</b><br/>\n                  Forklaring/hensikt ...<br/>\n                  Kafka: brukernotifikasjon + done\n                </Normaltekst>\n              </CenteredTextBox>\n            </Box>\n          </Box>\n        </Ingress>\n      </Innhold>\n    </Layout>\n  )\n};\n\nexport default Teknisk;\n","import React from 'react';\nimport styled from \"styled-components\";\n\nconst Svg = styled.svg`\n  width: 20px;\n  height: 20px;\n  margin-left: 0.35rem;\n  ${props => props.skjul && 'display: none;'};\n`;\n\nconst Utgang = (props) => (\n  <Svg viewBox=\"0 0 20 20\" {...props}>\n    <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g transform=\"translate(-843.000000, -1229.000000)\" fill=\"#0067C5\" fillRule=\"nonzero\">\n        <g transform=\"translate(161.000000, 1178.000000)\">\n          <g transform=\"translate(-0.000000, -0.000000)\">\n            <g transform=\"translate(519.000000, 50.000000)\">\n              <path\n                d=\"M182.935833,1.51500005 C182.851667,1.31083338 182.689167,1.14916671 182.485833,1.06416671 C182.384167,1.02250005 182.276667,1.00000005 182.168333,1.00000005 L177.175833,1.00000005 C176.715833,1.00000005 176.344167,1.37333338 176.344167,1.83250005 C176.344167,2.29333338 176.715833,2.66583338 177.175833,2.66583338 L180.16,2.66583338 L168.168333,14.6675 C167.843333,14.9925 167.843333,15.5191667 168.168333,15.845 C168.330833,16.0075 168.543333,16.0891667 168.756667,16.0891667 C168.97,16.0891667 169.1825,16.0075 169.345,15.845 L181.335833,3.84333338 L181.335833,6.82916671 C181.335833,7.28916671 181.708333,7.66166671 182.168333,7.66166671 C182.628333,7.66166671 183,7.28916671 183,6.82916671 L183,1.83250005 C183,1.72416671 182.978333,1.61666671 182.935833,1.51500005 M180.515,9.75916671 C180.055,9.75916671 179.6825,10.1325 179.6825,10.5925 L179.6825,19.335 L164.664167,19.335 L164.664167,4.30500005 L173.4,4.30500005 C173.86,4.30500005 174.2325,3.93166671 174.2325,3.47250005 C174.2325,3.01250005 173.86,2.64000005 173.4,2.64000005 L163.8325,2.64000005 C163.3725,2.64000005 163,3.01250005 163,3.47250005 L163,20.1675 C163,20.6275 163.3725,21 163.8325,21 L180.515,21 C180.974167,21 181.346667,20.6275 181.346667,20.1675 L181.346667,10.5925 C181.346667,10.1325 180.974167,9.75916671 180.515,9.75916671\" id=\"Fill-1\">\n              </path>\n            </g>\n          </g>\n        </g>\n      </g>\n    </g>\n  </Svg>\n);\n\nexport default Utgang;\n","import React from 'react';\nimport {Normaltekst, Systemtittel} from \"nav-frontend-typografi\";\nimport Layout from \"./styled/Layout\";\nimport Innhold from \"./styled/Innhold\";\nimport styled from \"styled-components\";\nimport Lenke from \"nav-frontend-lenker\";\nimport Utgang from \"../assets/Utgang\";\nimport {useMediaQuery} from \"react-responsive/src\";\n\nconst Ingress = styled.div`\n    width: 800px;\n    text-align: left;\n    @media (max-width: 1024px) {\n      width: 600px;\n    }\n    @media (max-width: 768px) {\n      width: 400px;\n    }\n    @media (max-width: 375px) {\n      width: 300px;\n    }\n`;\n\nconst Liste = styled.ul`\n   list-style-type: none;\n   padding-left: 0;\n`;\n\nconst ListItem = styled.li`\n   padding-bottom: 16px;\n`;\n\n\nconst Starte = () => {\n  const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n\n  return (\n    <Layout>\n      <Innhold>\n        <Systemtittel>\n          Hvordan komme i gang?\n        </Systemtittel>\n        <br/>\n        <Ingress>\n          <Liste>\n            <ListItem>\n              <Normaltekst>\n                <b>På slack: #</b>brukernotifikasjoner\n              </Normaltekst>\n            </ListItem>\n            <ListItem>\n              <Normaltekst>\n                <b>Få tilgang: </b>\n                <Lenke href=\"https://github.com/navikt/brukernotifikasjon-topic-iac\">\n                  <span>navikt/brukernotifikasjon-topic-iac</span><Utgang skjul={isMobile}/>\n                </Lenke>\n              </Normaltekst>\n            </ListItem>\n            <ListItem>\n                <Normaltekst>\n                    <b>Skjema:</b><br/>\n                    - Genererte typer: {''}\n                  <Lenke href=\"https://search.maven.org/search/?q=a:brukernotifikasjon-schemas\">\n                    <span>maven/brukernotifikasjon-schemas</span><Utgang skjul={isMobile}/>\n                  </Lenke><br/>\n                    - Definisjon: {''}\n                  <Lenke href=\"https://github.com/navikt/brukernotifikasjon-schemas\">\n                    <span>navikt/brukernotifikasjon-schemas</span><Utgang skjul={isMobile}/>\n                  </Lenke>\n                </Normaltekst>\n            </ListItem>\n            <ListItem>\n              <Normaltekst>\n                <b>Grafana-board: </b>\n                <Lenke href=\"https://grafana.adeo.no/d/6ore-PuZz/dittnav-kafka?orgId=1&refresh=1m\">\n                  <span>grafana/dittnav-kafka</span><Utgang skjul={isMobile}/>\n                </Lenke>\n              </Normaltekst>\n            </ListItem>\n            <ListItem>\n              <Normaltekst>\n                <b>DittNAV for lokal kjøring: </b>\n                <Lenke href=\"https://github.com/navikt/dittnav-docker-compose\">\n                  <span>navikt/dittnav-docker-compose</span><Utgang skjul={isMobile}/>\n                </Lenke>\n              </Normaltekst>\n            </ListItem>\n            <li>\n              <Normaltekst>\n                <b>Teste dette lokalt</b>\n              </Normaltekst>\n            </li>\n            <ListItem>\n              <Normaltekst>\n                <b>Eksempelkode: </b><br/>\n                - Java: {''}\n                <Lenke href=\"https://github.com/navikt/brukernotifikasjoner-demo-producer\">\n                  <span>navikt/brukernotifikasjoner-demo-producer</span><Utgang skjul={isMobile}/>\n                </Lenke><br/>\n                - Kotlin: {''}\n                <Lenke href=\"https://github.com/navikt/dittnav-event-test-producer\">\n                  <span>navikt/dittnav-event-test-producer</span><Utgang skjul={isMobile}/>\n                </Lenke>\n              </Normaltekst>\n            </ListItem>\n          </Liste>\n        </Ingress>\n      </Innhold>\n    </Layout>\n  )\n};\n\nexport default Starte;\n","import React from 'react';\nimport {Normaltekst, Systemtittel} from \"nav-frontend-typografi\";\nimport Layout from \"./styled/Layout\";\nimport Innhold from \"./styled/Innhold\";\nimport styled from \"styled-components\";\n\nconst Table = styled.table`\n   border-spacing: 10px;\n   width: 600px;\n   @media (max-width: 768px) {\n    width: 400px;\n   }\n   @media (max-width: 375px) {\n    width: 300px;\n   }\n`;\n\nconst TableRow = styled.tr`\n   text-align: left;\n`;\n\nconst TableHead = styled.th`\n   padding: 8px 8px 8px;\n   padding-left: 16px;\n   color: #FFFFFF;\n   background-color: #78706A;\n`;\n\nconst TableData = styled.td`\n   padding: 8px 8px 8px;\n   padding-left: 16px;\n   background-color: #FFFFFF;\n`;\n\nconst Status = () => {\n  return (\n    <Layout light>\n      <Innhold>\n        <Systemtittel>\n          Status for bruk av hendelser\n        </Systemtittel>\n        <Normaltekst>\n          Første produsent i prod 1.april<br/>\n          Gjennomsnittlig 20 000 eventer per dag\n        </Normaltekst>\n        <br/>\n        <Table>\n          <tbody>\n          <TableRow>\n            <TableHead>Team</TableHead>\n            <TableHead>Hendelsetype</TableHead>\n          </TableRow>\n          <TableRow>\n            <TableData>Sykemelding</TableData>\n            <TableData>Oppgave</TableData>\n          </TableRow>\n          <TableRow>\n            <TableData>Arbeidsplassen</TableData>\n            <TableData>Oppgave</TableData>\n          </TableRow>\n          <TableRow>\n            <TableData>Forskuddsløsningen</TableData>\n            <TableData>Beskjed</TableData>\n          </TableRow>\n          <TableRow>\n            <TableData>Sykdom i familien</TableData>\n            <TableData>Beskjed</TableData>\n          </TableRow>\n          </tbody>\n        </Table>\n      </Innhold>\n    </Layout>\n  )\n};\n\nexport default Status;\n","import React from 'react';\nimport Introduksjon from './components/Introduksjon';\nimport Problemer from \"./components/Problemer\";\nimport Oversikt from \"./components/Oversikt\";\nimport Funksjonalitet from \"./components/Funksjonalitet\";\nimport Tidslinje from \"./components/Tidslinje\";\nimport Teknisk from \"./components/Teknisk\";\nimport Starte from \"./components/Starte\";\nimport Status from \"./components/Status\";\nimport './App.less';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Introduksjon />\n      <Problemer />\n      <Oversikt />\n      <Funksjonalitet />\n      <Tidslinje />\n      <Teknisk />\n      <Starte />\n      <Status />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'}\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Prosess.67cdf57a.png\";"],"sourceRoot":""}